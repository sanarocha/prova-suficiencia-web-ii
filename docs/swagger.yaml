basePath: /
definitions:
  models.ComandaGetIDResponse:
    properties:
      idUsuario:
        type: integer
      nomeUsuario:
        type: string
      produtos:
        items:
          $ref: '#/definitions/models.ProdutoGetIDResponse'
        type: array
      telefoneUsuario:
        type: string
    type: object
  models.ComandaGetResponse:
    properties:
      idUsuario:
        type: integer
      nomeUsuario:
        type: string
      telefoneUsuario:
        type: string
    type: object
  models.ComandaInput:
    properties:
      idUsuario:
        type: integer
      nomeUsuario:
        type: string
      produtos:
        items:
          $ref: '#/definitions/models.ProdutoInput'
        type: array
      telefoneUsuario:
        type: string
    type: object
  models.ComandaPostResponse:
    properties:
      id:
        type: string
      idUsuario:
        type: integer
      nomeUsuario:
        type: string
      produtos:
        items:
          $ref: '#/definitions/models.ProdutoPostResponse'
        type: array
      telefoneUsuario:
        type: string
    type: object
  models.ProdutoGetIDResponse:
    properties:
      id:
        type: integer
      nome:
        type: string
      preco:
        type: number
    type: object
  models.ProdutoInput:
    properties:
      id:
        type: integer
      nome:
        type: string
      preco:
        type: number
    type: object
  models.ProdutoPostResponse:
    properties:
      id:
        type: integer
      nome:
        type: string
      preco:
        type: number
    type: object
  models.User:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Documentação da API para a prova de suficiência da disciplina Programação
    Web II
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger API Documentation
  version: "1.0"
paths:
  /comandas:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ComandaGetResponse'
            type: array
        "500":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retorna todas as comandas
      tags:
      - comandas
    post:
      consumes:
      - application/json
      parameters:
      - description: Dados da comanda
        in: body
        name: comanda
        required: true
        schema:
          $ref: '#/definitions/models.ComandaInput'
      produces:
      - application/json
      responses:
        "200":
          description: Comanda criada
          schema:
            $ref: '#/definitions/models.ComandaPostResponse'
        "400":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Cadastra uma nova comanda
      tags:
      - comandas
  /comandas/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID da Comanda
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: mensagem
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove uma comanda existente
      tags:
      - comandas
    get:
      consumes:
      - application/json
      parameters:
      - description: ID da Comanda
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComandaGetIDResponse'
        "400":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retorna a comanda com o ID inserido
      tags:
      - comandas
    put:
      consumes:
      - application/json
      parameters:
      - description: ID da Comanda
        in: path
        name: id
        required: true
        type: string
      - description: Novos dados da comanda
        in: body
        name: comanda
        required: true
        schema:
          $ref: '#/definitions/models.ComandaInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComandaGetIDResponse'
        "400":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Atualiza uma comanda existente
      tags:
      - comandas
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Token de login
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Dados para cadastro
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: mensagem
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: erro
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cadastro
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
